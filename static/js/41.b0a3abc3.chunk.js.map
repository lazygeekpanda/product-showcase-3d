{"version":3,"file":"static/js/41.b0a3abc3.chunk.js","mappings":"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","sources":["components/Canvas.tsx","components/Effects/Bloom.tsx","hooks/useDocumentTitle.ts","components/Sword.tsx","pages/Sword/Sword.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport * as THREE from 'three'\r\nimport { Canvas as R3FCanvas } from '@react-three/fiber'\r\nimport { ContactShadows } from '@react-three/drei'\r\n\r\nconst Canvas: React.FC = ({ children }) => (\r\n  <R3FCanvas\r\n    camera={{ position: [0, 0, 4], fov: 75 }}\r\n    dpr={[1, 2]}\r\n    shadows\r\n    onCreated={({ gl }) => {\r\n      gl.toneMapping = THREE.NoToneMapping\r\n    }}\r\n  >\r\n    {children}\r\n    <ContactShadows\r\n      rotation-x={Math.PI / 2}\r\n      position={[0, -1.4, 0]}\r\n      opacity={0.75}\r\n      width={14}\r\n      height={14}\r\n      blur={2.6}\r\n      far={2}\r\n    />\r\n  </R3FCanvas>\r\n)\r\n\r\nexport default Canvas\r\n","import React, { useRef, useMemo, useEffect } from 'react'\r\n\r\nimport * as THREE from 'three'\r\nimport { extend, useFrame, useThree, Object3DNode } from '@react-three/fiber'\r\n\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\r\n\r\nextend({ EffectComposer, RenderPass, UnrealBloomPass })\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      unrealBloomPass: Object3DNode<UnrealBloomPass, typeof UnrealBloomPass>\r\n    }\r\n  }\r\n}\r\n\r\nconst Bloom: React.FC = ({ children }) => {\r\n  const { gl, camera, size } = useThree()\r\n  const ref = useRef()\r\n  const composer = useRef<EffectComposer>()\r\n  const aspect = useMemo(\r\n    () => new THREE.Vector2(size.width, size.height),\r\n    [size]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!ref.current || !composer.current) return\r\n\r\n    ref.current && composer.current.setSize(size.width, size.height)\r\n  }, [ref, size])\r\n\r\n  useFrame(() => {\r\n    if (!ref.current || !composer.current) return\r\n\r\n    ref.current && composer.current.render()\r\n  }, 1)\r\n\r\n  return (\r\n    <>\r\n      <scene ref={ref} background={new THREE.Color('#000007')}>\r\n        {children}\r\n      </scene>\r\n      <effectComposer ref={composer} args={[gl]}>\r\n        <renderPass attachArray=\"passes\" scene={ref.current} camera={camera} />\r\n        <unrealBloomPass attachArray=\"passes\" args={[aspect, 1, 0.5, 0]} />\r\n      </effectComposer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bloom\r\n","import { useRef, useEffect } from 'react'\r\n\r\nfunction useDocumentTitle(title: string, prevailOnUnmount = false) {\r\n  const defaultTitle = useRef(document.title)\r\n\r\n  useEffect(() => {\r\n    document.title = title\r\n  }, [title])\r\n\r\n  useEffect(\r\n    () => () => {\r\n      if (!prevailOnUnmount) {\r\n        document.title = defaultTitle.current\r\n      }\r\n    },\r\n    [prevailOnUnmount]\r\n  )\r\n}\r\n\r\nexport default useDocumentTitle\r\n","import React, { memo } from 'react'\r\nimport { useLoader, useFrame } from '@react-three/fiber'\r\nimport * as THREE from 'three'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\n\r\nconst SCALE = 0.35\r\n\r\nconst Sword: React.FC<{ color: string }> = ({ color }) => {\r\n  const ref = React.useRef<THREE.Group>()\r\n  const model: any = useLoader(GLTFLoader, require('assets/sword/Sword3.glb'))\r\n\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return\r\n    }\r\n\r\n    ref.current.traverse((c: any) => {\r\n      if (c.type === 'Mesh') {\r\n        if (c.material.name === \"Material.001\" || c.material.name === \"Material.004\") {\r\n          c.material.emissive.set(color)\r\n        }\r\n      }\r\n    })\r\n  }, [color])\r\n\r\n  let mixer: THREE.AnimationMixer\r\n  if (model.animations.length) {\r\n    mixer = new THREE.AnimationMixer(model.scene)\r\n    model.animations.forEach((clip: any) => {\r\n      const action = mixer.clipAction(clip)\r\n      action.play()\r\n    })\r\n  }\r\n\r\n  useFrame(({ clock }, delta) => {\r\n    if (!mixer || !ref || !ref.current) {\r\n      return\r\n    }\r\n\r\n    const t = clock.getElapsedTime()\r\n    ref.current.rotation.y = (Math.PI / 1.75 + Math.cos(t / 4) / 8) * 0.5\r\n    ref.current.rotation.x = 2 * -1 + Math.sin(delta / 4) / 8\r\n    ref.current.rotation.z = -1 + Math.sin(t * 1.5) / 10\r\n\r\n    // Pulsation animation\r\n    ref.current.traverse((c: any) => {\r\n      if (c.type === 'Mesh') {\r\n        if (c.material.name === \"Material.001\" || c.material.name === \"Material.004\") {\r\n          c.material.emissiveIntensity = Math.abs(\r\n            Math.sin(clock.elapsedTime * 0.5)\r\n          )\r\n        }\r\n      }\r\n    })\r\n\r\n    // Animation mixer update\r\n    mixer.update(delta)\r\n  })\r\n\r\n  return (\r\n    <group\r\n      ref={ref}\r\n      position={[-0.5, 0, 0]}\r\n      // rotation={[-2, 0.75, -0.5]}\r\n      scale={[SCALE, SCALE * 1.1, SCALE]}\r\n    >\r\n      <primitive object={model.scene} dispose={null} castShadow />\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default memo(Sword)\r\n","import React, { useState } from 'react'\r\nimport Canvas from 'components/Canvas'\r\nimport {\r\n  PresentationControls,\r\n  Stats,\r\n  Loader,\r\n  SpotLight,\r\n} from '@react-three/drei'\r\n\r\nimport Sword from 'components/Sword'\r\n\r\nimport Bloom from 'components/Effects/Bloom'\r\n\r\nimport useDocumentTitle from 'hooks/useDocumentTitle'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { GithubPicker } from 'react-color'\r\n\r\nconst SwordPresentation: React.FC = () => {\r\n  useDocumentTitle('Sword presentation')\r\n\r\n  const [color, setColor] = useState('#ff5500')\r\n\r\n  return (\r\n    <div className=\"presentation__page\">\r\n      <div className=\"presentation__item presentation__sword\">\r\n        <div className=\"presentation__item-wrapper\">\r\n          <Canvas>\r\n            <Bloom>\r\n              <PresentationControls\r\n                global={false}\r\n                config={{ mass: 4, tension: 500 }}\r\n                snap\r\n                rotation={[0, -0.5, 0]}\r\n                polar={[-Math.PI / 3, Math.PI / 3]}\r\n                azimuth={[-Math.PI / 1.4, Math.PI / 2]}\r\n              >\r\n                <React.Suspense fallback={null}>\r\n                  <Sword color={color} />\r\n                </React.Suspense>\r\n              </PresentationControls>\r\n\r\n              <SpotLight\r\n                penumbra={0.5}\r\n                position={[3, -3, 0]}\r\n                intensity={1}\r\n                angle={0.5}\r\n                color=\"#5158BB\"\r\n                castShadow={false}\r\n                radiusTop={5}\r\n                distance={10}\r\n              />\r\n              <SpotLight\r\n                penumbra={0.1}\r\n                distance={10}\r\n                position={[-4, 3, 3]}\r\n                intensity={0.75}\r\n                angle={0.75}\r\n                color=\"#fff\"\r\n                castShadow={false}\r\n                opacity={0.01}\r\n              />\r\n              <ambientLight intensity={10} />\r\n            </Bloom>\r\n            <Stats />\r\n          </Canvas>\r\n          <Loader />\r\n\r\n          <div className=\"presentation__details\">\r\n            <h1>Sword</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"config-container config-container__sword\">\r\n          <GithubPicker\r\n            triangle=\"hide\"\r\n            colors={[\r\n              '#ff5500',\r\n              '#05ffff',\r\n              '#B80000',\r\n              '#A40E4C',\r\n              '#FCCB00',\r\n              '#008B02',\r\n              '#004DCF',\r\n              '#5300EB',\r\n              '#AFFC41',\r\n              '#EDAF97',\r\n            ]}\r\n            color={color}\r\n            onChange={(color: any) => {\r\n              setColor(color.hex)\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"credits\">\r\n        <div className=\"footer-navigation footer-navigation--previous\">\r\n          <Link to=\"/tesla\">Go to Tesla Demo</Link>\r\n        </div>\r\n        <div className=\"footer-navigation footer-navigation--next\">\r\n          <Link to=\"/\">Go to Home</Link>\r\n        </div>\r\n        <p>\r\n          This work is based on\r\n          <a\r\n            href=\"https://sketchfab.com/3d-models/neon-blade-sword-e3caffae38ff43aea3476cea700b6a00\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Sword Model\r\n          </a>\r\n          by\r\n          <a\r\n            href=\"https://sketchfab.com/Wawann\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Wawann / Sketchfab\r\n          </a>\r\n          licensed under\r\n          <a\r\n            href=\"https://creativecommons.org/licenses/by/4.0/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            CC Attribution\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SwordPresentation\r\n"],"names":["children","camera","position","fov","dpr","shadows","onCreated","gl","toneMapping","THREE","Math","PI","opacity","width","height","blur","far","extend","EffectComposer","RenderPass","UnrealBloomPass","useThree","size","ref","useRef","composer","aspect","useMemo","useEffect","current","setSize","useFrame","render","background","args","attachArray","scene","title","prevailOnUnmount","defaultTitle","document","SCALE","Sword","mixer","color","React","model","useLoader","GLTFLoader","require","traverse","c","type","material","name","emissive","set","animations","length","forEach","clip","clipAction","play","delta","clock","t","getElapsedTime","rotation","y","cos","x","sin","z","emissiveIntensity","abs","elapsedTime","update","scale","object","dispose","castShadow","memo","useDocumentTitle","useState","setColor","className","Canvas","Bloom","PresentationControls","global","config","mass","tension","snap","polar","azimuth","fallback","SpotLight","penumbra","intensity","angle","radiusTop","distance","Stats","Loader","triangle","colors","onChange","hex","to","href","target","rel"],"sourceRoot":""}