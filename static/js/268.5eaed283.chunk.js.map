{"version":3,"file":"static/js/268.5eaed283.chunk.js","mappings":"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","sources":["../node_modules/@react-three/drei/core/PointMaterial.js","../node_modules/@react-three/drei/core/Points.js","../node_modules/@react-three/drei/core/useTexture.js","../node_modules/three/examples/jsm/libs/fflate.module.js","../node_modules/three/examples/jsm/curves/NURBSUtils.js","../node_modules/three/examples/jsm/loaders/FBXLoader.js","../node_modules/three/examples/jsm/curves/NURBSCurve.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.PointsMaterial {\n  constructor(props) {\n    super(props);\n\n    this.onBeforeCompile = shader => {\n      shader.fragmentShader = shader.fragmentShader.replace('#include <output_fragment>', `\n        #include <output_fragment>\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      float r = dot(cxy, cxy);\n      float delta = fwidth(r);     \n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\n      `);\n    };\n  }\n\n}\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl(null));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { Position } from '../helpers/Position.js';\n\nlet i, positionRef;\nconst context = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst position = new THREE.Vector3();\nnew THREE.Color();\n/**\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\n */\n\nconst PointsInstances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}, ref) => {\n  const parentRef = React.useRef(null);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\n    length: limit * 3\n  }, () => 1), Float32Array.from({\n    length: limit\n  }, () => 1)]);\n  React.useLayoutEffect(() => {\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n  }, [refs, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  useFrame(() => {\n    parentRef.current.updateMatrix();\n    parentRef.current.updateMatrixWorld();\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n    for (i = 0; i < refs.length; i++) {\n      positionRef = refs[i].current;\n      position.toArray(positions, i * 3);\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\n      positionRef.matrixWorldNeedsUpdate = true;\n      positionRef.color.toArray(colors, i * 3);\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\n      sizes.set([positionRef.size], i);\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < refs.length; i++) {\n      var _refs$i$current;\n\n      Object.assign(events, (_refs$i$current = refs[i].current) == null ? void 0 : _refs$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: event => {\n        var _refs$event$index, _r3f, _r3f$handlers;\n\n        const object = (_refs$event$index = refs[event.index]) == null ? void 0 : _refs$event$index.current;\n        return object == null ? void 0 : (_r3f = object.__r3f) == null ? void 0 : (_r3f$handlers = _r3f.handlers) == null ? void 0 : _r3f$handlers[key]({ ...event,\n          object\n        });\n      }\n    }), {});\n  }, [children, refs]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef])\n  }, events, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'position'],\n    count: positions.length / 3,\n    array: positions,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'color'],\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'size'],\n    count: sizes.length,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Point = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\n/**\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\n */\n\nconst PointsBuffer = /*#__PURE__*/React.forwardRef(({\n  children,\n  positions,\n  colors,\n  sizes,\n  stride = 3,\n  ...props\n}, forwardedRef) => {\n  const pointsRef = React.useRef(null);\n  useFrame(() => {\n    const attr = pointsRef.current.geometry.attributes;\n    attr.position.needsUpdate = true;\n    if (colors) attr.color.needsUpdate = true;\n    if (sizes) attr.size.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: mergeRefs([forwardedRef, pointsRef])\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'position'],\n    count: positions.length / stride,\n    array: positions,\n    itemSize: stride,\n    usage: THREE.DynamicDrawUsage\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'color'],\n    count: colors.length / stride,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'size'],\n    count: sizes.length / stride,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), children);\n});\nconst Points = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  if (props.positions instanceof Float32Array) {\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\n      ref: forwardedRef\n    }));\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\n    ref: forwardedRef\n  }));\n});\n\nexport { Point, Points, PointsBuffer };\n","import { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useEffect } from 'react';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input); // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseTexture.preload = url => useLoader.preload(TextureLoader, url); // @ts-expect-error new in r3f 7.0.5\n\n\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { IsObject, useTexture };\n","/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.6.9\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar durl = function (c) { return URL.createObjectURL(new Blob([c], { type: 'text/javascript' })); };\nvar cwk = function (u) { return new Worker(u); };\ntry {\n    URL.revokeObjectURL(durl(''));\n}\ncatch (e) {\n    // We're in Deno or a very old browser\n    durl = function (c) { return 'data:application/javascript;charset=UTF-8,' + encodeURI(c); };\n    // If Deno, this is necessary; if not, this changes nothing\n    cwk = function (u) { return new Worker(u, { type: 'module' }); };\n}\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = cwk(ch2[id] || (ch2[id] = durl(c)));\n    w.onerror = function (e) { return cb(e.error, null); };\n    w.onmessage = function (e) { return cb(null, e.data); };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i)\n        ++l[cd[i] - 1];\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p / 8) | 0) + (p & 7 && 1); };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && !st.l && sl < 5))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e < s) {\n                // write full block\n                pos = wfblk(w, pos, dat.subarray(i, e));\n            }\n            else {\n                // write final block\n                w[i] = lst;\n                pos = wfblk(w, pos, dat.subarray(i, s));\n            }\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new u32(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && 0xEDB88320) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (t)\n            throw 'stream finished';\n        if (!strm.ondata)\n            throw 'no stream handler';\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        throw 'invalid gzip data';\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                throw 'invalid gzip stream';\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                throw 'invalid zlib stream';\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no stream handler';\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k;\n        if (val instanceof u8)\n            t[n] = [val, o];\n        else if (Array.isArray(val))\n            t[n] = [val[0], mrg(o, val[1])];\n        else\n            fltn(val, n + '/', t, o);\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    throw 'invalid utf-8 data';\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            throw 'stream finished';\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                throw 'invalid utf-8 data';\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        if (this.d)\n            throw 'stream finished';\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            throw 'invalid utf-8 data';\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                throw 'extra field too long';\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        throw 'date not in range 1980-2099';\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback - add to ZIP archive before pushing';\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (this.d & 2)\n            throw 'stream finished';\n        var f = strToU8(file.filename), fl = f.length;\n        var com = file.comment, o = com && strToU8(com);\n        var u = fl != file.filename.length || (o && (com.length != o.length));\n        var hl = fl + exfl(file.extra) + 30;\n        if (fl > 65535)\n            throw 'filename too long';\n        var header = new u8(hl);\n        wzh(header, 0, file, f, u);\n        var chks = [header];\n        var pAll = function () {\n            for (var _i = 0, chks_1 = chks; _i < chks_1.length; _i++) {\n                var chk = chks_1[_i];\n                _this_1.ondata(null, chk, false);\n            }\n            chks = [];\n        };\n        var tr = this.d;\n        this.d = 0;\n        var ind = this.u.length;\n        var uf = mrg(file, {\n            f: f,\n            u: u,\n            o: o,\n            t: function () {\n                if (file.terminate)\n                    file.terminate();\n            },\n            r: function () {\n                pAll();\n                if (tr) {\n                    var nxt = _this_1.u[ind + 1];\n                    if (nxt)\n                        nxt.r();\n                    else\n                        _this_1.d = 1;\n                }\n                tr = 1;\n            }\n        });\n        var cl = 0;\n        file.ondata = function (err, dat, final) {\n            if (err) {\n                _this_1.ondata(err, dat, final);\n                _this_1.terminate();\n            }\n            else {\n                cl += dat.length;\n                chks.push(dat);\n                if (final) {\n                    var dd = new u8(16);\n                    wbytes(dd, 0, 0x8074B50);\n                    wbytes(dd, 4, file.crc);\n                    wbytes(dd, 8, cl);\n                    wbytes(dd, 12, file.size);\n                    chks.push(dd);\n                    uf.c = cl, uf.b = hl + cl + 16, uf.crc = file.crc, uf.size = file.size;\n                    if (tr)\n                        uf.r();\n                    tr = 1;\n                }\n                else if (tr)\n                    pAll();\n            }\n        };\n        this.u.push(uf);\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            if (this.d & 1)\n                throw 'stream finishing';\n            throw 'stream finished';\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cb(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cb(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl('filename too long', null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            throw 'filename too long';\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, data, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            throw 'no callback';\n        if (!this.p)\n            throw 'stream finished';\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_2 = [];\n                        this_1.k.unshift(chks_2);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    throw 'no callback';\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        throw 'unknown compression type ' + cmp_1;\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_3 = chks_2; _i < chks_3.length; _i++) {\n                                        var dat = chks_3[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_2 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                throw 'invalid zip file';\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\n/**\n * Asynchronously decompresses a ZIP archive\n * @param data The raw compressed ZIP file\n * @param cb The callback to call with the decompressed files\n * @returns A function that can be used to immediately terminate the unzipping\n */\nexport function unzip(data, cb) {\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cb('invalid zip file', null);\n            return;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (!lft)\n        cb(null, {});\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50) {\n            cb('invalid zip file', null);\n            return;\n        }\n        c = lft = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var _loop_3 = function (i) {\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                files[fn] = d;\n                if (!--lft)\n                    cb(null, files);\n            }\n        };\n        if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n        else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (sc < 320000) {\n                try {\n                    cbl(null, inflateSync(infl, new u8(su)));\n                }\n                catch (e) {\n                    cbl(e, null);\n                }\n            }\n            else\n                term.push(inflate(infl, { size: su }, cbl));\n        }\n        else\n            cbl('unknown compression type ' + c_1, null);\n    };\n    for (var i = 0; i < c; ++i) {\n        _loop_3(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @returns The decompressed files\n */\nexport function unzipSync(data) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            throw 'invalid zip file';\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!c_2)\n            files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n        else\n            throw 'unknown compression type ' + c_2;\n    }\n    return files;\n}\n","import {\n\tVector3,\n\tVector4\n} from 'three';\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\n/*\nFinds knot vector span.\n\np : degree\nu : parametric value\nU : knot vector\n\nreturns the span\n*/\nfunction findSpan( p, u, U ) {\n\n\tconst n = U.length - p - 1;\n\n\tif ( u >= U[ n ] ) {\n\n\t\treturn n - 1;\n\n\t}\n\n\tif ( u <= U[ p ] ) {\n\n\t\treturn p;\n\n\t}\n\n\tlet low = p;\n\tlet high = n;\n\tlet mid = Math.floor( ( low + high ) / 2 );\n\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\tif ( u < U[ mid ] ) {\n\n\t\t\thigh = mid;\n\n\t\t} else {\n\n\t\t\tlow = mid;\n\n\t\t}\n\n\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t}\n\n\treturn mid;\n\n}\n\n\n/*\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nU    : knot vector\n\nreturns array[p+1] with basis functions values.\n*/\nfunction calcBasisFunctions( span, u, p, U ) {\n\n\tconst N = [];\n\tconst left = [];\n\tconst right = [];\n\tN[ 0 ] = 1.0;\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tconst temp = N[ r ] / ( rv + lv );\n\t\t\tN[ r ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tN[ j ] = saved;\n\n\t}\n\n\treturn N;\n\n}\n\n\n/*\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\np : degree of B-Spline\nU : knot vector\nP : control points (x, y, z, w)\nu : parametric point\n\nreturns point for given u\n*/\nfunction calcBSplinePoint( p, U, P, u ) {\n\n\tconst span = findSpan( p, u, U );\n\tconst N = calcBasisFunctions( span, u, p, U );\n\tconst C = new Vector4( 0, 0, 0, 0 );\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tconst point = P[ span - p + j ];\n\t\tconst Nj = N[ j ];\n\t\tconst wNj = point.w * Nj;\n\t\tC.x += point.x * wNj;\n\t\tC.y += point.y * wNj;\n\t\tC.z += point.z * wNj;\n\t\tC.w += point.w * Nj;\n\n\t}\n\n\treturn C;\n\n}\n\n\n/*\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nn    : number of derivatives to calculate\nU    : knot vector\n\nreturns array[n+1][p+1] with basis functions derivatives\n*/\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\n\n\tconst zeroArr = [];\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tzeroArr[ i ] = 0.0;\n\n\tconst ders = [];\n\n\tfor ( let i = 0; i <= n; ++ i )\n\t\tders[ i ] = zeroArr.slice( 0 );\n\n\tconst ndu = [];\n\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\tndu[ 0 ][ 0 ] = 1.0;\n\n\tconst left = zeroArr.slice( 0 );\n\tconst right = zeroArr.slice( 0 );\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tndu[ j ][ j ] = saved;\n\n\t}\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t}\n\n\tfor ( let r = 0; r <= p; ++ r ) {\n\n\t\tlet s1 = 0;\n\t\tlet s2 = 1;\n\n\t\tconst a = [];\n\t\tfor ( let i = 0; i <= p; ++ i ) {\n\n\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t}\n\n\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\t\tlet d = 0.0;\n\t\t\tconst rk = r - k;\n\t\t\tconst pk = p - k;\n\n\t\t\tif ( r >= k ) {\n\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t}\n\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\n\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t}\n\n\t\t\tif ( r <= pk ) {\n\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t}\n\n\t\t\tders[ k ][ r ] = d;\n\n\t\t\tconst j = s1;\n\t\t\ts1 = s2;\n\t\t\ts2 = j;\n\n\t\t}\n\n\t}\n\n\tlet r = p;\n\n\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ k ][ j ] *= r;\n\n\t\t}\n\n\t\tr *= p - k;\n\n\t}\n\n\treturn ders;\n\n}\n\n\n/*\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points\n\tu  : Parametric points\n\tnd : number of derivatives\n\n\treturns array[d+1] with derivatives\n\t*/\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\n\n\tconst du = nd < p ? nd : p;\n\tconst CK = [];\n\tconst span = findSpan( p, u, U );\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\n\tconst Pw = [];\n\n\tfor ( let i = 0; i < P.length; ++ i ) {\n\n\t\tconst point = P[ i ].clone();\n\t\tconst w = point.w;\n\n\t\tpoint.x *= w;\n\t\tpoint.y *= w;\n\t\tpoint.z *= w;\n\n\t\tPw[ i ] = point;\n\n\t}\n\n\tfor ( let k = 0; k <= du; ++ k ) {\n\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = point;\n\n\t}\n\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate \"K over I\"\n\nreturns k!/(i!(k-i)!)\n*/\nfunction calcKoverI( k, i ) {\n\n\tlet nom = 1;\n\n\tfor ( let j = 2; j <= k; ++ j ) {\n\n\t\tnom *= j;\n\n\t}\n\n\tlet denom = 1;\n\n\tfor ( let j = 2; j <= i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\tfor ( let j = 2; j <= k - i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\treturn nom / denom;\n\n}\n\n\n/*\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\nPders : result of function calcBSplineDerivatives\n\nreturns array with derivatives for rational curve.\n*/\nfunction calcRationalCurveDerivatives( Pders ) {\n\n\tconst nd = Pders.length;\n\tconst Aders = [];\n\tconst wders = [];\n\n\tfor ( let i = 0; i < nd; ++ i ) {\n\n\t\tconst point = Pders[ i ];\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\twders[ i ] = point.w;\n\n\t}\n\n\tconst CK = [];\n\n\tfor ( let k = 0; k < nd; ++ k ) {\n\n\t\tconst v = Aders[ k ].clone();\n\n\t\tfor ( let i = 1; i <= k; ++ i ) {\n\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\np  : degree\nU  : knot vector\nP  : control points in homogeneous space\nu  : parametric points\nnd : number of derivatives\n\nreturns array with derivatives.\n*/\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\n\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\n\treturn calcRationalCurveDerivatives( Pders );\n\n}\n\n\n/*\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\np1, p2 : degrees of B-Spline surface\nU1, U2 : knot vectors\nP      : control points (x, y, z, w)\nu, v   : parametric values\n\nreturns point for given (u, v)\n*/\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst temp = [];\n\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\tconst w = point.w;\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n\n\nexport {\n\tfindSpan,\n\tcalcBasisFunctions,\n\tcalcBSplinePoint,\n\tcalcBasisFunctionDerivatives,\n\tcalcBSplineDerivatives,\n\tcalcKoverI,\n\tcalcRationalCurveDerivatives,\n\tcalcNURBSDerivatives,\n\tcalcSurfacePoint,\n};\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from 'three';\nimport * as fflate from '../libs/fflate.module.js';\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\n\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * Binary format specification:\n *\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nlet fbxTree;\nlet connections;\nlet sceneGraph;\n\nclass FBXLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( FBXBuffer, path ) {\n\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t} else {\n\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t}\n\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t}\n\n\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t}\n\n\t\t// console.log( fbxTree );\n\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t}\n\n}\n\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\nclass FBXTreeParser {\n\n\tconstructor( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tparse() {\n\n\t\tconnections = this.parseConnections();\n\n\t\tconst images = this.parseImages();\n\t\tconst textures = this.parseTextures( images );\n\t\tconst materials = this.parseMaterials( textures );\n\t\tconst deformers = this.parseDeformers();\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\n\n\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\treturn sceneGraph;\n\n\t}\n\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t// and details the connection type\n\tparseConnections() {\n\n\t\tconst connectionMap = new Map();\n\n\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\n\n\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\tconst fromID = rawConnection[ 0 ];\n\t\t\t\tconst toID = rawConnection[ 1 ];\n\t\t\t\tconst relationship = rawConnection[ 2 ];\n\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn connectionMap;\n\n\t}\n\n\t// Parse FBXTree.Objects.Video for embedded image data\n\t// These images are connected to textures in FBXTree.Objects.Textures\n\t// via FBXTree.Connections.\n\tparseImages() {\n\n\t\tconst images = {};\n\t\tconst blobs = {};\n\n\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\n\n\t\t\tfor ( const nodeID in videoNodes ) {\n\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\n\n\t\t\t\tconst id = parseInt( nodeID );\n\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( const id in images ) {\n\n\t\t\tconst filename = images[ id ];\n\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\t// Parse embedded image data in FBXTree.Video.Content\n\tparseImage( videoNode ) {\n\n\t\tconst content = videoNode.Content;\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\tlet type;\n\n\t\tswitch ( extension ) {\n\n\t\t\tcase 'bmp':\n\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png':\n\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif':\n\n\t\t\t\ttype = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tga':\n\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t}\n\n\t\t\t\ttype = 'image/tga';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t} else { // Binary Format\n\n\t\t\tconst array = new Uint8Array( content );\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t}\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Texture\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t// to images in FBXTree.Objects.Video\n\tparseTextures( images ) {\n\n\t\tconst textureMap = new Map();\n\n\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\n\t\t\tfor ( const nodeID in textureNodes ) {\n\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textureMap;\n\n\t}\n\n\t// Parse individual node in FBXTree.Objects.Texture\n\tparseTexture( textureNode, images ) {\n\n\t\tconst texture = this.loadTexture( textureNode, images );\n\n\t\ttexture.ID = textureNode.id;\n\n\t\ttexture.name = textureNode.attrName;\n\n\t\tconst wrapModeU = textureNode.WrapModeU;\n\t\tconst wrapModeV = textureNode.WrapModeV;\n\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t// 0: repeat(default), 1: clamp\n\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\tconst values = textureNode.Scaling.value;\n\n\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\tloadTexture( textureNode, images ) {\n\n\t\tlet fileName;\n\n\t\tconst currentPath = this.textureLoader.path;\n\n\t\tconst children = connections.get( textureNode.id ).children;\n\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet texture;\n\n\t\tconst extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\tif ( extension === 'tga' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.tga' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'psd' ) {\n\n\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\ttexture = new Texture();\n\n\t\t} else {\n\n\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t}\n\n\t\tthis.textureLoader.setPath( currentPath );\n\n\t\treturn texture;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Material\n\tparseMaterials( textureMap ) {\n\n\t\tconst materialMap = new Map();\n\n\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\n\n\t\t\tfor ( const nodeID in materialNodes ) {\n\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materialMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Material\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t// FBX format currently only supports Lambert and Phong shading models\n\tparseMaterial( materialNode, textureMap ) {\n\n\t\tconst ID = materialNode.id;\n\t\tconst name = materialNode.attrName;\n\t\tlet type = materialNode.ShadingModel;\n\n\t\t// Case where FBX wraps shading model in property object.\n\t\tif ( typeof type === 'object' ) {\n\n\t\t\ttype = type.value;\n\n\t\t}\n\n\t\t// Ignore unused materials which don't have any connections.\n\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\tlet material;\n\n\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\tcase 'phong':\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\t\t\tcase 'lambert':\n\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tmaterial.setValues( parameters );\n\t\tmaterial.name = name;\n\n\t\treturn material;\n\n\t}\n\n\t// Parse FBX material and return parameters suitable for a three.js material\n\t// Also parse the texture map and return any textures associated with the material\n\tparseParameters( materialNode, textureMap, ID ) {\n\n\t\tconst parameters = {};\n\n\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Diffuse ) {\n\n\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\n\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t}\n\n\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Emissive ) {\n\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\n\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t}\n\n\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t}\n\n\t\tif ( materialNode.Opacity ) {\n\n\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t}\n\n\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\tparameters.transparent = true;\n\n\t\t}\n\n\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Shininess ) {\n\n\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t}\n\n\t\tif ( materialNode.Specular ) {\n\n\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\n\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t}\n\n\t\tconst scope = this;\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\tconst type = child.relationship;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'Bump':\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DiffuseColor':\n\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.map !== undefined ) {\n\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NormalMap':\n\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TransparentColor':\n\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientColor':\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn parameters;\n\n\t}\n\n\t// get a texture from the textureMap for use by a material.\n\tgetTexture( textureMap, id ) {\n\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t}\n\n\t\treturn textureMap.get( id );\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Deformer\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\tparseDeformers() {\n\n\t\tconst skeletons = {};\n\t\tconst morphTargets = {};\n\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\tfor ( const nodeID in DeformerNodes ) {\n\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\tconst morphTarget = {\n\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tskeletons: skeletons,\n\t\t\tmorphTargets: morphTargets,\n\n\t\t};\n\n\t}\n\n\t// Parse single nodes in FBXTree.Objects.Deformer\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t// Each skin node represents a skeleton and each cluster node represents a bone\n\tparseSkeleton( relationships, deformerNodes ) {\n\n\t\tconst rawBones = [];\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\n\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\tconst rawBone = {\n\n\t\t\t\tID: child.ID,\n\t\t\t\tindices: [],\n\t\t\t\tweights: [],\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t};\n\n\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t}\n\n\t\t\trawBones.push( rawBone );\n\n\t\t} );\n\n\t\treturn {\n\n\t\t\trawBones: rawBones,\n\t\t\tbones: []\n\n\t\t};\n\n\t}\n\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\tparseMorphTargets( relationships, deformerNodes ) {\n\n\t\tconst rawMorphTargets = [];\n\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\tconst child = relationships.children[ i ];\n\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\tconst rawMorphTarget = {\n\n\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\tid: morphTargetNode.id,\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t};\n\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t} )[ 0 ].ID;\n\n\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t}\n\n\t\treturn rawMorphTargets;\n\n\t}\n\n\t// create the main Group() to be returned by the loader\n\tparseScene( deformers, geometryMap, materialMap ) {\n\n\t\tsceneGraph = new Group();\n\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tconst scope = this;\n\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\tconst modelNode = modelNodes[ model.ID ];\n\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\n\n\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\tconst parent = modelMap.get( connection.ID );\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t} );\n\n\t\t\tif ( model.parent === null ) {\n\n\t\t\t\tsceneGraph.add( model );\n\n\t\t\t}\n\n\n\t\t} );\n\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\tthis.createAmbientLight();\n\n\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\tif ( node.parent ) {\n\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\n\n\t\t\t\t}\n\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\n\n\t\t\t\tnode.applyMatrix4( transform );\n\t\t\t\tnode.updateWorldMatrix();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst animations = new AnimationParser().parse();\n\n\t\t// if all the models where already combined in a single group, just return that\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t}\n\n\t\tsceneGraph.animations = animations;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.Model\n\tparseModels( skeletons, geometryMap, materialMap ) {\n\n\t\tconst modelMap = new Map();\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tfor ( const nodeID in modelNodes ) {\n\n\t\t\tconst id = parseInt( nodeID );\n\t\t\tconst node = modelNodes[ nodeID ];\n\t\t\tconst relationships = connections.get( id );\n\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\tif ( ! model ) {\n\n\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Null':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\tmodel.ID = id;\n\n\t\t\t}\n\n\t\t\tthis.getTransformData( model, node );\n\t\t\tmodelMap.set( id, model );\n\n\t\t}\n\n\t\treturn modelMap;\n\n\t}\n\n\tbuildSkeleton( relationships, skeletons, id, name ) {\n\n\t\tlet bone = null;\n\n\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\tfor ( const ID in skeletons ) {\n\n\t\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\tconst subBone = bone;\n\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn bone;\n\n\t}\n\n\t// create a PerspectiveCamera or OrthographicCamera\n\tcreateCamera( relationships ) {\n\n\t\tlet model;\n\t\tlet cameraAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tcameraAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type = 0;\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\ttype = 1;\n\n\t\t\t}\n\n\t\t\tlet nearClippingPlane = 1;\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t}\n\n\t\t\tlet farClippingPlane = 1000;\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t}\n\n\n\t\t\tlet width = window.innerWidth;\n\t\t\tlet height = window.innerHeight;\n\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t}\n\n\t\t\tconst aspect = width / height;\n\n\t\t\tlet fov = 45;\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t}\n\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Perspective\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\t// Create a DirectionalLight, PointLight or SpotLight\n\tcreateLight( relationships ) {\n\n\t\tlet model;\n\t\tlet lightAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tlightAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( lightAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type;\n\n\t\t\t// LightType can be undefined for Point lights\n\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\ttype = 0;\n\n\t\t\t} else {\n\n\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t}\n\n\t\t\tlet color = 0xffffff;\n\n\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t}\n\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t// light disabled\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\tintensity = 0;\n\n\t\t\t}\n\n\t\t\tlet distance = 0;\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\tdistance = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\tconst decay = 1;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Point\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Directional\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // Spot\n\t\t\t\t\tlet angle = Math.PI / 3;\n\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet penumbra = 0;\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\tmodel.castShadow = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateMesh( relationships, geometryMap, materialMap ) {\n\n\t\tlet model;\n\t\tlet geometry = null;\n\t\tlet material = null;\n\t\tconst materials = [];\n\n\t\t// get geometry and materials(s) from connections\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t}\n\n\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( materials.length > 1 ) {\n\n\t\t\tmaterial = materials;\n\n\t\t} else if ( materials.length > 0 ) {\n\n\t\t\tmaterial = materials[ 0 ];\n\n\t\t} else {\n\n\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\tmaterials.push( material );\n\n\t\t}\n\n\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\tmodel.normalizeSkinWeights();\n\n\t\t} else {\n\n\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateCurve( relationships, geometryMap ) {\n\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\treturn geo;\n\n\t\t}, null );\n\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\tconst material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\treturn new Line( geometry, material );\n\n\t}\n\n\t// parse the model node for transform data\n\tgetTransformData( model, modelNode ) {\n\n\t\tconst transformData = {};\n\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\tmodel.userData.transformData = transformData;\n\n\t}\n\n\tsetLookAtProperties( model, modelNode ) {\n\n\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\tconst children = connections.get( model.ID ).children;\n\n\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\n\n\t\tconst bindMatrices = this.parsePoseNodes();\n\n\t\tfor ( const ID in skeletons ) {\n\n\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\tconst geoID = parent.ID;\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\n\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tparsePoseNodes() {\n\n\t\tconst bindMatrices = {};\n\n\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\tfor ( const nodeID in BindPoseNode ) {\n\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\n\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bindMatrices;\n\n\t}\n\n\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\tcreateAmbientLight() {\n\n\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\tconst r = ambientColor[ 0 ];\n\t\t\tconst g = ambientColor[ 1 ];\n\t\t\tconst b = ambientColor[ 2 ];\n\n\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\tconst color = new Color( r, g, b );\n\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse Geometry data from FBXTree and return map of BufferGeometries\nclass GeometryParser {\n\n\t// Parse nodes in FBXTree.Objects.Geometry\n\tparse( deformers ) {\n\n\t\tconst geometryMap = new Map();\n\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\tfor ( const nodeID in geoNodes ) {\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometryMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Geometry\n\tparseGeometry( relationships, geoNode, deformers ) {\n\n\t\tswitch ( geoNode.attrType ) {\n\n\t\t\tcase 'Mesh':\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\tbreak;\n\n\t\t\tcase 'NurbsCurve':\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\n\n\t\tconst skeletons = deformers.skeletons;\n\t\tconst morphTargets = [];\n\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t} );\n\n\t\t// don't create geometry if it is not associated with any models\n\t\tif ( modelNodes.length === 0 ) return;\n\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\treturn skeleton;\n\n\t\t}, null );\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// Assume one model and get the preRotation from that\n\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\tconst modelNode = modelNodes[ 0 ];\n\n\t\tconst transformData = {};\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\tconst transform = generateTransform( transformData );\n\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t}\n\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\tconst geo = new BufferGeometry();\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\tconst buffers = this.genBuffers( geoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t}\n\n\t\tif ( skeleton ) {\n\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t// used later to bind the skeleton to the model\n\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t}\n\n\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t}\n\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\tlet name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t// the first uv buffer is just called 'uv'\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tname = 'uv';\n\n\t\t\t}\n\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t} );\n\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\tlet startIndex = 0;\n\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t// using one of them\n\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\treturn geo;\n\n\t}\n\n\tparseGeoNode( geoNode, skeleton ) {\n\n\t\tconst geoInfo = {};\n\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\tgeoInfo.uv = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeoInfo.weightTable = {};\n\n\t\tif ( skeleton !== null ) {\n\n\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geoInfo;\n\n\t}\n\n\tgenBuffers( geoInfo ) {\n\n\t\tconst buffers = {\n\t\t\tvertex: [],\n\t\t\tnormal: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\t\t\tmaterialIndex: [],\n\t\t\tvertexWeights: [],\n\t\t\tweightsIndices: [],\n\t\t};\n\n\t\tlet polygonIndex = 0;\n\t\tlet faceLength = 0;\n\t\tlet displayedWeightsWarning = false;\n\n\t\t// these will hold data for a single face\n\t\tlet facePositionIndexes = [];\n\t\tlet faceNormals = [];\n\t\tlet faceColors = [];\n\t\tlet faceUVs = [];\n\t\tlet faceWeights = [];\n\t\tlet faceWeightIndices = [];\n\n\t\tconst scope = this;\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\tlet materialIndex;\n\t\t\tlet endOfFace = false;\n\n\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t// A cube with quad faces looks like this:\n\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t//  }\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\tendOfFace = true;\n\n\t\t\t}\n\n\t\t\tlet weightIndices = [];\n\t\t\tlet weights = [];\n\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t} );\n\n\n\t\t\t\t}\n\n\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\tlet currentWeight = weight;\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\tweights = Weight;\n\n\t\t\t\t}\n\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfaceLength ++;\n\n\t\t\tif ( endOfFace ) {\n\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\tpolygonIndex ++;\n\t\t\t\tfaceLength = 0;\n\n\t\t\t\t// reset arrays for the next face\n\t\t\t\tfacePositionIndexes = [];\n\t\t\t\tfaceNormals = [];\n\t\t\t\tfaceColors = [];\n\t\t\t\tfaceUVs = [];\n\t\t\t\tfaceWeights = [];\n\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn buffers;\n\n\t}\n\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\tfor ( let i = 2; i < faceLength; i ++ ) {\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\tif ( morphTargets.length === 0 ) return;\n\n\t\tparentGeo.morphTargetsRelative = true;\n\n\t\tparentGeo.morphAttributes.position = [];\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\tconst scope = this;\n\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\tconst vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\tconst morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\tconst indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\tconst length = parentGeo.attributes.position.count * 3;\n\t\tconst morphPositions = new Float32Array( length );\n\n\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\tconst morphIndex = indices[ i ] * 3;\n\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t}\n\n\t\t// TODO: add morph normal support\n\t\tconst morphGeoInfo = {\n\t\t\tvertexIndices: vertexIndices,\n\t\t\tvertexPositions: morphPositions,\n\n\t\t};\n\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t}\n\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\tparseNormals( NormalNode ) {\n\n\t\tconst mappingType = NormalNode.MappingInformationType;\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\n\t\tconst buffer = NormalNode.Normals.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 3,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\tparseUVs( UVNode ) {\n\n\t\tconst mappingType = UVNode.MappingInformationType;\n\t\tconst referenceType = UVNode.ReferenceInformationType;\n\t\tconst buffer = UVNode.UV.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 2,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\tparseVertexColors( ColorNode ) {\n\n\t\tconst mappingType = ColorNode.MappingInformationType;\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\n\t\tconst buffer = ColorNode.Colors.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 4,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\tparseMaterialIndices( MaterialNode ) {\n\n\t\tconst mappingType = MaterialNode.MappingInformationType;\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\n\n\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: [ 0 ],\n\t\t\t\tindices: [ 0 ],\n\t\t\t\tmappingType: 'AllSame',\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t}\n\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t// for conforming with the other functions we've written for other data.\n\t\tconst materialIndices = [];\n\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\tmaterialIndices.push( i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 1,\n\t\t\tbuffer: materialIndexBuffer,\n\t\t\tindices: materialIndices,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\tparseNurbsGeometry( geoNode ) {\n\n\t\tif ( NURBSCurve === undefined ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst order = parseInt( geoNode.Order );\n\n\t\tif ( isNaN( order ) ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst degree = order - 1;\n\n\t\tconst knots = geoNode.KnotVector.a;\n\t\tconst controlPoints = [];\n\t\tconst pointsValues = geoNode.Points.a;\n\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t}\n\n\t\tlet startKnot, endKnot;\n\n\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\tstartKnot = degree;\n\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\n\n\t\treturn new BufferGeometry().setFromPoints( points );\n\n\t}\n\n}\n\n// parse animation data from FBXTree\nclass AnimationParser {\n\n\t// take raw animation clips and turn them into three.js animation clips\n\tparse() {\n\n\t\tconst animationClips = [];\n\n\t\tconst rawClips = this.parseClips();\n\n\t\tif ( rawClips !== undefined ) {\n\n\t\t\tfor ( const key in rawClips ) {\n\n\t\t\t\tconst rawClip = rawClips[ key ];\n\n\t\t\t\tconst clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animationClips;\n\n\t}\n\n\tparseClips() {\n\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t// if this is undefined we can safely assume there are no animations\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\n\n\t\treturn rawClips;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t// and is referenced by an AnimationLayer\n\tparseAnimationCurveNodes() {\n\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\tconst curveNodesMap = new Map();\n\n\t\tfor ( const nodeID in rawCurveNodes ) {\n\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\tconst curveNode = {\n\n\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\tcurves: {},\n\n\t\t\t\t};\n\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn curveNodesMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t// axis ( e.g. times and values of x rotation)\n\tparseAnimationCurves( curveNodesMap ) {\n\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t// clearly, this should be optimised to\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\tfor ( const nodeID in rawCurves ) {\n\n\t\t\tconst animationCurve = {\n\n\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t};\n\n\t\t\tconst relationships = connections.get( animationCurve.id );\n\n\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\tparseAnimationLayers( curveNodesMap ) {\n\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\tconst layersMap = new Map();\n\n\t\tfor ( const nodeID in rawLayers ) {\n\n\t\t\tconst layerCurveNodes = [];\n\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\n\n\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\tconst children = connection.children;\n\n\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn layersMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\tparseAnimStacks( layersMap ) {\n\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t// connect the stacks (clips) up to the layers\n\t\tconst rawClips = {};\n\n\t\tfor ( const nodeID in rawStacks ) {\n\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t}\n\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\tlayer: layer,\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn rawClips;\n\n\t}\n\n\taddClip( rawClip ) {\n\n\t\tlet tracks = [];\n\n\t\tconst scope = this;\n\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t} );\n\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t}\n\n\tgenerateTracks( rawTracks ) {\n\n\t\tconst tracks = [];\n\n\t\tlet initialPosition = new Vector3();\n\t\tlet initialRotation = new Quaternion();\n\t\tlet initialScale = new Vector3();\n\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\tinitialPosition = initialPosition.toArray();\n\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\tinitialScale = initialScale.toArray();\n\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t}\n\n\tgenerateRotationTrack( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\tif ( curves.x !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.x );\n\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tif ( curves.y !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.y );\n\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tif ( curves.z !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.z );\n\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\tif ( preRotation !== undefined ) {\n\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t}\n\n\t\tif ( postRotation !== undefined ) {\n\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t}\n\n\t\tconst quaternion = new Quaternion();\n\t\tconst euler = new Euler();\n\n\t\tconst quaternionValues = [];\n\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\n\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t}\n\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t}\n\n\tgenerateMorphTrack( rawTracks ) {\n\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\n\t\tconst values = curves.values.map( function ( val ) {\n\n\t\t\treturn val / 100;\n\n\t\t} );\n\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t}\n\n\t// For all animated objects, times are defined separately for each axis\n\t// Here we'll combine the times into one sorted array without duplicates\n\tgetTimesForAllAxes( curves ) {\n\n\t\tlet times = [];\n\n\t\t// first join together the times for each axis, if defined\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t// then sort them\n\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t} );\n\n\t\t// and remove duplicates\n\t\tif ( times.length > 1 ) {\n\n\t\t\tlet targetIndex = 1;\n\t\t\tlet lastValue = times[ 0 ];\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\n\n\t\t\t\tconst currentValue = times[ i ];\n\t\t\t\tif ( currentValue !== lastValue ) {\n\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\n\t\t\t\t\tlastValue = currentValue;\n\t\t\t\t\ttargetIndex ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttimes = times.slice( 0, targetIndex );\n\n\t\t}\n\n\t\treturn times;\n\n\t}\n\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\n\n\t\tconst prevValue = initialValue;\n\n\t\tconst values = [];\n\n\t\tlet xIndex = - 1;\n\t\tlet yIndex = - 1;\n\t\tlet zIndex = - 1;\n\n\t\ttimes.forEach( function ( time ) {\n\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t// if there is an x value defined for this frame, use that\n\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\n\t\t\t\tvalues.push( xValue );\n\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\n\t\t\t\tvalues.push( yValue );\n\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\n\t\t\t\tvalues.push( zValue );\n\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn values;\n\n\t}\n\n\t// Rotations are defined as Euler angles which can have values  of any size\n\t// These will be converted to quaternions which don't support values greater than\n\t// PI, so we'll interpolate large rotations\n\tinterpolateRotations( curve ) {\n\n\t\tfor ( let i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\tconst initialValue = curve.values[ i - 1 ];\n\t\t\tconst valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\tconst absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\tconst numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\tconst step = valuesSpan / numSubIntervals;\n\t\t\t\tlet nextValue = initialValue + step;\n\n\t\t\t\tconst initialTime = curve.times[ i - 1 ];\n\t\t\t\tconst timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\tconst interval = timeSpan / numSubIntervals;\n\t\t\t\tlet nextTime = initialTime + interval;\n\n\t\t\t\tconst interpolatedTimes = [];\n\t\t\t\tconst interpolatedValues = [];\n\n\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\tnextValue += step;\n\n\t\t\t\t}\n\n\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse an FBX file in ASCII format\nclass TextParser {\n\n\tgetPrevNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t}\n\n\tgetCurrentNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t}\n\n\tgetCurrentProp() {\n\n\t\treturn this.currentProp;\n\n\t}\n\n\tpushStack( node ) {\n\n\t\tthis.nodeStack.push( node );\n\t\tthis.currentIndent += 1;\n\n\t}\n\n\tpopStack() {\n\n\t\tthis.nodeStack.pop();\n\t\tthis.currentIndent -= 1;\n\n\t}\n\n\tsetCurrentProp( val, name ) {\n\n\t\tthis.currentProp = val;\n\t\tthis.currentPropName = name;\n\n\t}\n\n\tparse( text ) {\n\n\t\tthis.currentIndent = 0;\n\n\t\tthis.allNodes = new FBXTree();\n\t\tthis.nodeStack = [];\n\t\tthis.currentProp = [];\n\t\tthis.currentPropName = '';\n\n\t\tconst scope = this;\n\n\t\tconst split = text.split( /[\\r\\n]+/ );\n\n\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\tif ( matchBeginning ) {\n\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\tscope.popStack();\n\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.allNodes;\n\n\t}\n\n\tparseNodeBegin( line, property ) {\n\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t} );\n\n\t\tconst node = { name: nodeName };\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\t// a top node\n\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t} else { // a subnode\n\n\t\t\t// if the subnode already exists, append it\n\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\tthis.pushStack( node );\n\n\t}\n\n\tparseNodeAttr( attrs ) {\n\n\t\tlet id = attrs[ 0 ];\n\n\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet name = '', type = '';\n\n\t\tif ( attrs.length > 1 ) {\n\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\ttype = attrs[ 2 ];\n\n\t\t}\n\n\t\treturn { id: id, name: name, type: type };\n\n\t}\n\n\tparseNodeProperty( line, property, contentLine ) {\n\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t//\tContent: ,\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t}\n\n\t\tconst currentNode = this.getCurrentNode();\n\t\tconst parentName = currentNode.name;\n\n\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Connections\n\t\tif ( propName === 'C' ) {\n\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\n\t\t\tconst from = parseInt( connProps[ 0 ] );\n\t\t\tconst to = parseInt( connProps[ 1 ] );\n\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t} );\n\n\t\t\tpropName = 'connections';\n\t\t\tpropValue = [ from, to ];\n\t\t\tappend( propValue, rest );\n\n\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Node\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t// connections\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t} else {\n\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\telse currentNode.a = propValue;\n\n\t\t}\n\n\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t}\n\n\t}\n\n\tparseNodePropertyContinued( line ) {\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\tcurrentNode.a += line;\n\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t// so convert the string to an array\n\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t}\n\n\t}\n\n\t// parse \"Property70\"\n\tparseNodeSpecialProperty( line, propName, propValue ) {\n\n\t\t// split this\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t// into array like below\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t} );\n\n\t\tconst innerPropName = props[ 0 ];\n\t\tconst innerPropType1 = props[ 1 ];\n\t\tconst innerPropType2 = props[ 2 ];\n\t\tconst innerPropFlag = props[ 3 ];\n\t\tlet innerPropValue = props[ 4 ];\n\n\t\t// cast values where needed, otherwise leave as strings\n\t\tswitch ( innerPropType1 ) {\n\n\t\t\tcase 'int':\n\t\t\tcase 'enum':\n\t\t\tcase 'bool':\n\t\t\tcase 'ULongLong':\n\t\t\tcase 'double':\n\t\t\tcase 'Number':\n\t\t\tcase 'FieldOfView':\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t\tcase 'Color':\n\t\t\tcase 'ColorRGB':\n\t\t\tcase 'Vector3D':\n\t\t\tcase 'Lcl_Translation':\n\t\t\tcase 'Lcl_Rotation':\n\t\t\tcase 'Lcl_Scaling':\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// CAUTION: these props must append to parent's parent\n\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t'type': innerPropType1,\n\t\t\t'type2': innerPropType2,\n\t\t\t'flag': innerPropFlag,\n\t\t\t'value': innerPropValue\n\n\t\t};\n\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t}\n\n}\n\n// Parse an FBX file in Binary format\nclass BinaryParser {\n\n\tparse( buffer ) {\n\n\t\tconst reader = new BinaryReader( buffer );\n\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\tconst version = reader.getUint32();\n\n\t\tif ( version < 6400 ) {\n\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t}\n\n\t\tconst allNodes = new FBXTree();\n\n\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\tconst node = this.parseNode( reader, version );\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t}\n\n\t\treturn allNodes;\n\n\t}\n\n\t// Check if reader has reached the end of content.\n\tendOfContent( reader ) {\n\n\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t// - 16bytes: magic\n\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t// - 4bytes: magic\n\t\t// - 4bytes: version\n\t\t// - 120bytes: zero\n\t\t// - 16bytes: magic\n\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t} else {\n\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t}\n\n\t}\n\n\t// recursively parse nodes until the end of the file is reached\n\tparseNode( reader, version ) {\n\n\t\tconst node = {};\n\n\t\t// The first three data sizes depends on version.\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\tconst nameLen = reader.getUint8();\n\t\tconst name = reader.getString( nameLen );\n\n\t\t// Regards this node as NULL-record if endOffset is zero\n\t\tif ( endOffset === 0 ) return null;\n\n\t\tconst propertyList = [];\n\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\n\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t}\n\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t// check if this node represents just a single property\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\tconst subNode = this.parseNode( reader, version );\n\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t}\n\n\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\tif ( typeof id === 'number' ) node.id = id;\n\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\tif ( name !== '' ) node.name = name;\n\n\t\treturn node;\n\n\t}\n\n\tparseSubNode( name, node, subNode ) {\n\n\t\t// special case: child node is single property\n\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\tconst value = subNode.propertyList[ 0 ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\tsubNode.a = value;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t}\n\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\tconst array = [];\n\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t} );\n\n\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\tnode.connections = [];\n\n\t\t\t}\n\n\t\t\tnode.connections.push( array );\n\n\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\tconst keys = Object.keys( subNode );\n\n\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t} );\n\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\tlet innerPropValue;\n\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\tinnerPropValue = [\n\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t}\n\n\t\t\t// this will be copied to parent, see above\n\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t}\n\n\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tparseProperty( reader ) {\n\n\t\tconst type = reader.getString( 1 );\n\t\tlet length;\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'C':\n\t\t\t\treturn reader.getBoolean();\n\n\t\t\tcase 'D':\n\t\t\t\treturn reader.getFloat64();\n\n\t\t\tcase 'F':\n\t\t\t\treturn reader.getFloat32();\n\n\t\t\tcase 'I':\n\t\t\t\treturn reader.getInt32();\n\n\t\t\tcase 'L':\n\t\t\t\treturn reader.getInt64();\n\n\t\t\tcase 'R':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\tcase 'S':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getString( length );\n\n\t\t\tcase 'Y':\n\t\t\t\treturn reader.getInt16();\n\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'f':\n\t\t\tcase 'i':\n\t\t\tcase 'l':\n\n\t\t\t\tconst arrayLength = reader.getUint32();\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\tconst compressedLength = reader.getUint32();\n\n\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( typeof fflate === 'undefined' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library fflate.min.js required.' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t}\n\n\t}\n\n}\n\nclass BinaryReader {\n\n\tconstructor( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tgetOffset() {\n\n\t\treturn this.offset;\n\n\t}\n\n\tsize() {\n\n\t\treturn this.dv.buffer.byteLength;\n\n\t}\n\n\tskip( length ) {\n\n\t\tthis.offset += length;\n\n\t}\n\n\t// seems like true/false representation depends on exporter.\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t// then sees LSB.\n\tgetBoolean() {\n\n\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t}\n\n\tgetBooleanArray( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getBoolean() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint8() {\n\n\t\tconst value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t}\n\n\tgetInt16() {\n\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t}\n\n\tgetInt32() {\n\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetInt32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint32() {\n\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t// There's a possibility that this method returns wrong value if the value\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t// TODO: safely handle 64-bit integer\n\tgetInt64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\t// calculate negative value\n\t\tif ( high & 0x80000000 ) {\n\n\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetInt64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// Note: see getInt64() comment\n\tgetUint64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetFloat32() {\n\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetFloat32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetFloat64() {\n\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t}\n\n\tgetFloat64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetArrayBuffer( size ) {\n\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\tthis.offset += size;\n\t\treturn value;\n\n\t}\n\n\tgetString( size ) {\n\n\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\tlet a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta[ i ] = this.getUint8();\n\n\t\t}\n\n\t\tconst nullByte = a.indexOf( 0 );\n\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t}\n\n}\n\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n// and BinaryParser( FBX Binary format)\nclass FBXTree {\n\n\tadd( key, val ) {\n\n\t\tthis[ key ] = val;\n\n\t}\n\n}\n\n// ************** UTILITY FUNCTIONS **************\n\nfunction isFbxFormatBinary( buffer ) {\n\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\n\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n}\n\nfunction isFbxFormatASCII( text ) {\n\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\tlet cursor = 0;\n\n\tfunction read( offset ) {\n\n\t\tconst result = text[ offset - 1 ];\n\t\ttext = text.slice( cursor + offset );\n\t\tcursor ++;\n\t\treturn result;\n\n\t}\n\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\n\n\t\tconst num = read( 1 );\n\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction getFbxVersion( text ) {\n\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\n\tconst match = text.match( versionRegExp );\n\n\tif ( match ) {\n\n\t\tconst version = parseInt( match[ 1 ] );\n\t\treturn version;\n\n\t}\n\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n}\n\n// Converts FBX ticks into real time seconds.\nfunction convertFBXTimeToSeconds( time ) {\n\n\treturn time / 46186158000;\n\n}\n\nconst dataArray = [];\n\n// extracts the data from the correct position in the FBX array based on indexing type\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\tlet index;\n\n\tswitch ( infoObject.mappingType ) {\n\n\t\tcase 'ByPolygonVertex' :\n\t\t\tindex = polygonVertexIndex;\n\t\t\tbreak;\n\t\tcase 'ByPolygon' :\n\t\t\tindex = polygonIndex;\n\t\t\tbreak;\n\t\tcase 'ByVertice' :\n\t\t\tindex = vertexIndex;\n\t\t\tbreak;\n\t\tcase 'AllSame' :\n\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t}\n\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\tconst from = index * infoObject.dataSize;\n\tconst to = from + infoObject.dataSize;\n\n\treturn slice( dataArray, infoObject.buffer, from, to );\n\n}\n\nconst tempEuler = new Euler();\nconst tempVec = new Vector3();\n\n// generate transformation from FBX transform data\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\nfunction generateTransform( transformData ) {\n\n\tconst lTranslationM = new Matrix4();\n\tconst lPreRotationM = new Matrix4();\n\tconst lRotationM = new Matrix4();\n\tconst lPostRotationM = new Matrix4();\n\n\tconst lScalingM = new Matrix4();\n\tconst lScalingPivotM = new Matrix4();\n\tconst lScalingOffsetM = new Matrix4();\n\tconst lRotationOffsetM = new Matrix4();\n\tconst lRotationPivotM = new Matrix4();\n\n\tconst lParentGX = new Matrix4();\n\tconst lParentLX = new Matrix4();\n\tconst lGlobalT = new Matrix4();\n\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\tif ( transformData.preRotation ) {\n\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder );\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.rotation ) {\n\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder );\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.postRotation ) {\n\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder );\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\t\tlPostRotationM.invert();\n\n\t}\n\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t// Pivots and offsets\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t// parent transform\n\tif ( transformData.parentMatrixWorld ) {\n\n\t\tlParentLX.copy( transformData.parentMatrix );\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\n\n\t}\n\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\n\t// Global Rotation\n\tconst lParentGRM = new Matrix4();\n\tlParentGRM.extractRotation( lParentGX );\n\n\t// Global Shear*Scaling\n\tconst lParentTM = new Matrix4();\n\tlParentTM.copyPosition( lParentGX );\n\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\n\tconst lLSM = lScalingM;\n\n\tconst lGlobalRS = new Matrix4();\n\n\tif ( inheritType === 0 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t} else if ( inheritType === 1 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t} else {\n\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t}\n\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\n\t// Calculate the local transform matrix\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\n\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\n\n\t// from global to local\n\tlTransform.premultiply( lParentGX.invert() );\n\n\treturn lTransform;\n\n}\n\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\nfunction getEulerOrder( order ) {\n\n\torder = order || 0;\n\n\tconst enums = [\n\t\t'ZYX', // -> XYZ extrinsic\n\t\t'YZX', // -> XZY extrinsic\n\t\t'XZY', // -> YZX extrinsic\n\t\t'ZXY', // -> YXZ extrinsic\n\t\t'YXZ', // -> ZXY extrinsic\n\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t];\n\n\tif ( order === 6 ) {\n\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\treturn enums[ 0 ];\n\n\t}\n\n\treturn enums[ order ];\n\n}\n\n// Parses comma separated list of numbers and returns them an array.\n// Used internally by the TextParser\nfunction parseNumberArray( value ) {\n\n\tconst array = value.split( ',' ).map( function ( val ) {\n\n\t\treturn parseFloat( val );\n\n\t} );\n\n\treturn array;\n\n}\n\nfunction convertArrayBufferToString( buffer, from, to ) {\n\n\tif ( from === undefined ) from = 0;\n\tif ( to === undefined ) to = buffer.byteLength;\n\n\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n}\n\nfunction append( a, b ) {\n\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n}\n\nfunction slice( a, b, from, to ) {\n\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n\treturn a;\n\n}\n\n// inject array a2 into array a1 at index\nfunction inject( a1, index, a2 ) {\n\n\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n}\n\nexport { FBXLoader };\n","import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n\n\tconstructor(\n\t\tdegree,\n\t\tknots /* array of reals */,\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\n\t\tstartKnot /* index in knots */,\n\t\tendKnot /* index in knots */\n\t) {\n\n\t\tsuper();\n\n\t\tthis.degree = degree;\n\t\tthis.knots = knots;\n\t\tthis.controlPoints = [];\n\t\t// Used by periodic NURBS to remove hidden spans\n\t\tthis.startKnot = startKnot || 0;\n\t\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\n\t\tfor ( let i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n}\n\nexport { NURBSCurve };\n"],"names":["PointMaterialImpl","props","onBeforeCompile","shader","fragmentShader","replace","THREE","PointMaterial","React","ref","material","_extends","object","attach","i","positionRef","context","parentMatrix","position","PointsInstances","children","range","limit","parentRef","refs","setRefs","Float32Array","from","length","positions","colors","sizes","current","geometry","drawRange","count","Math","min","undefined","attributes","needsUpdate","useFrame","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","toArray","matrixWorldNeedsUpdate","color","set","size","events","_refs$i$current","Object","assign","__r3f","handlers","keys","reduce","prev","key","event","_refs$event$index","_r3f","_r3f$handlers","index","api","subscribe","filter","item","matrixAutoUpdate","mergeRefs","attachObject","array","itemSize","usage","Provider","value","PointsBuffer","forwardedRef","stride","pointsRef","attr","Points","IsObject","url","Array","isArray","useTexture","input","gl","useThree","state","textures","useLoader","TextureLoader","values","useEffect","forEach","initTexture","keyed","indexOf","preload","clear","ch2","durl","c","URL","createObjectURL","Blob","type","cwk","u","Worker","revokeObjectURL","e","encodeURI","u8","Uint8Array","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","start","b","r","j","_a","fl","revfl","_b","fd","revfd","rev","x","hMap","cd","mb","s","l","co","le","rvb","sv","r_1","v","m","flt","fdt","flm","flrm","fdm","fdrm","max","a","bits","d","p","o","bits16","shft","slc","n","subarray","inflt","dat","buf","st","sl","noBuf","noSt","cbuf","bl","nbuf","final","f","pos","bt","lm","dm","lbt","dbt","tbts","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","sym","add","dsym","end","wbits","wbits16","hTree","push","t2","slice","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","w","clen","cf","wfblk","out","wblk","syms","lf","df","li","bs","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","ll","dl","flen","ftlen","dtlen","llm","lcts","it","clct","len","dst","deo","dflt","lvl","plvl","pre","post","lst","ceil","opt","msk_1","head","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","ml","nl","mmd","md","ti","lin","din","crct","k","crc","cr","adler","dopt","level","mem","log","mrg","wcln","fn","fnStr","td","toString","ks","lastIndexOf","split","st_1","prototype","spInd","ch","wrkr","fns","init","id","cb","td_1","msg","transfer","onerror","error","onmessage","data","postMessage","wk","constructor","buffer","cbfs","bInflt","inflateSync","pbf","gu8","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zlv","cbify","opts","err","terminate","consume","astrm","strm","ondata","ev","astrmify","call","b2","b4","b8","filename","mtime","floor","Date","now","charCodeAt","flg","zs","lv","AsyncCmpStrm","this","Deflate","chunk","AsyncDeflate","deflate","Inflate","bts","AsyncInflate","inflate","Gzip","raw","AsyncGzip","gzip","gzipSync","Gunzip","AsyncGunzip","gunzip","gunzipSync","Zlib","AsyncZlib","zlib","zlibSync","Unzlib","AsyncUnzlib","unzlib","unzlibSync","Decompress","G","I","Z","_this_1","apply","arguments","AsyncDecompress","decompress","decompressSync","fltn","val","te","TextEncoder","TextDecoder","tds","decode","stream","dutf8","String","fromCharCode","DecodeUTF8","np","EncodeUTF8","strToU8","str","latin1","ar_1","encode","ar","ai","strFromU8","dbf","slzh","zh","z","fnl","es","z64e","sc","su","off","exfl","ex","wzh","ce","extra","col","exl","os","flag","compression","y","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","attrs","exf","wzf","ZipPassThrough","process","ZipDeflate","AsyncZipDeflate","Zip","file","com","comment","hl","header","chks","pAll","_i","chks_1","chk","ind","uf","nxt","dd","splice","zip","tot","slft","files","term","tAll","cbf","oe","cdl","badd","loc","_loop_1","ms","cbl","zipSync","UnzipPassThrough","UnzipInflate","AsyncUnzipInflate","_","sz","Unzip","onfile","toAdd","is","oc","_loop_2","sig","this_1","bf","cmp_1","chks_2","unshift","d_1","sc_1","su_1","fn_1","file_1","name","ctr","chks_3","originalSize","register","decoder","unzip","_loop_3","c_1","no","infl","unzipSync","c_2","findSpan","U","low","high","mid","calcBasisFunctions","span","N","left","right","saved","rv","temp","calcBSplinePoint","P","C","Vector4","point","Nj","wNj","calcKoverI","nom","denom","calcNURBSDerivatives","nd","Pders","du","CK","nders","zeroArr","ders","ndu","s1","s2","rk","pk","j2","calcBasisFunctionDerivatives","Pw","clone","multiplyScalar","calcBSplineDerivatives","Aders","wders","Vector3","sub","divideScalar","calcRationalCurveDerivatives","fbxTree","connections","sceneGraph","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","optionalTarget","hpoint","NURBSUtils","tangent","normalize","Curve","FBXLoader","manager","onLoad","onProgress","onError","scope","path","LoaderUtils","loader","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","parse","console","itemError","FBXBuffer","CORRECT","byteLength","convertArrayBufferToString","isFbxFormatBinary","BinaryParser","FBXText","text","cursor","read","offset","result","isFbxFormatASCII","Error","getFbxVersion","TextParser","textureLoader","resourcePath","setCrossOrigin","crossOrigin","FBXTreeParser","Loader","parseConnections","images","parseImages","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","GeometryParser","parseScene","connectionMap","Map","Connections","rawConnection","fromID","toID","relationship","has","parents","parentRelationship","ID","get","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","parseInt","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","image","parseImage","pop","content","fileName","extension","toLowerCase","getHandler","warn","window","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","valueV","wrapS","RepeatWrapping","ClampToEdgeWrapping","wrapT","Scaling","repeat","currentPath","FileName","materialMap","materialNodes","Material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","MeshPhongMaterial","MeshLambertMaterial","setValues","BumpFactor","bumpScale","Diffuse","Color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","sRGBEncoding","displacementMap","emissiveMap","normalMap","envMap","mapping","EquirectangularReflectionMapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","Matrix4","TransformLink","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","Group","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","connection","parent","bindSkeleton","createAmbientLight","traverse","node","userData","transformData","matrix","parentMatrixWorld","transform","generateTransform","applyMatrix4","updateWorldMatrix","animations","AnimationParser","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","Bone","PropertyBinding","getTransformData","bone","subBone","cameraAttribute","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","PointLight","DirectionalLight","angle","PI","InnerAngle","MathUtils","penumbra","OuterAngle","SpotLight","CastShadows","castShadow","vertexColors","FBX_Deformer","SkinnedMesh","normalizeSkinWeights","Mesh","geo","LineBasicMaterial","linewidth","Line","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","target","lookAt","bindMatrices","parsePoseNodes","geoConnParent","bind","Skeleton","BindPoseNode","Pose","NbPoseNodes","poseNodes","PoseNode","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","g","AmbientLight","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","Float32BufferAttribute","vertex","setAttribute","Uint16BufferAttribute","weightsIndices","vertexWeights","normal","normalMatrix","Matrix3","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","UV","parseUVs","weightTable","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","morphAttributes","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","KnotVector","pointsValues","Form","points","getPoints","setFromPoints","animationClips","rawClips","parseClips","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","match","curveNode","curves","rawCurves","animationCurve","times","KeyTime","convertFBXTimeToSeconds","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","AnimationClip","Quaternion","decompose","Euler","setFromQuaternion","T","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","setFromEuler","quaternion","euler","quaternionValues","premultiply","multiply","QuaternionKeyframeTrack","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","targetIndex","lastValue","currentValue","prevValue","xIndex","yIndex","zIndex","time","xValue","yValue","zValue","curve","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","interval","nextTime","interpolatedTimes","interpolatedValues","inject","nodeStack","currentIndent","currentProp","currentPropName","allNodes","FBXTree","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","popStack","parseNodePropertyContinued","property","nodeName","trim","nodeAttrs","parseNodeAttr","currentNode","getCurrentNode","pushStack","contentLine","propName","propValue","connProps","to","rest","append","elem","setCurrentProp","parseNumberArray","parseNodeSpecialProperty","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","getPrevNode","reader","BinaryReader","skip","version","getUint32","endOfContent","parseNode","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","fflate","reader2","littleEndian","dv","DataView","nullByte","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lParentLX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lParentTM","copyPosition","lParentGRSM","lParentGSM","lLSM","lGlobalRS","lParentLSM_inv","setFromMatrixScale","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2"],"sourceRoot":""}