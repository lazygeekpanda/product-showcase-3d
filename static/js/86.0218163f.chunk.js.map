{"version":3,"file":"static/js/86.0218163f.chunk.js","mappings":"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","sources":["components/Canvas.tsx","components/Effects/Bloom.tsx","hooks/useDocumentTitle.ts","components/Tesla.tsx","pages/Tesla/Configurator.tsx","pages/Tesla/Tesla.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport * as THREE from 'three'\r\nimport { Canvas as R3FCanvas } from '@react-three/fiber'\r\nimport { ContactShadows } from '@react-three/drei'\r\n\r\nconst Canvas: React.FC = ({ children }) => (\r\n  <R3FCanvas\r\n    camera={{ position: [0, 0, 4], fov: 75 }}\r\n    dpr={[1, 2]}\r\n    shadows\r\n    onCreated={({ gl }) => {\r\n      gl.toneMapping = THREE.NoToneMapping\r\n    }}\r\n  >\r\n    {children}\r\n    <ContactShadows\r\n      rotation-x={Math.PI / 2}\r\n      position={[0, -1.4, 0]}\r\n      opacity={0.75}\r\n      width={14}\r\n      height={14}\r\n      blur={2.6}\r\n      far={2}\r\n    />\r\n  </R3FCanvas>\r\n)\r\n\r\nexport default Canvas\r\n","import React, { useRef, useMemo, useEffect } from 'react'\r\n\r\nimport * as THREE from 'three'\r\nimport { extend, useFrame, useThree, Object3DNode } from '@react-three/fiber'\r\n\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\r\n\r\nextend({ EffectComposer, RenderPass, UnrealBloomPass })\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      unrealBloomPass: Object3DNode<UnrealBloomPass, typeof UnrealBloomPass>\r\n    }\r\n  }\r\n}\r\n\r\nconst Bloom: React.FC = ({ children }) => {\r\n  const { gl, camera, size } = useThree()\r\n  const ref = useRef()\r\n  const composer = useRef<EffectComposer>()\r\n  const aspect = useMemo(\r\n    () => new THREE.Vector2(size.width, size.height),\r\n    [size]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!ref.current || !composer.current) return\r\n\r\n    ref.current && composer.current.setSize(size.width, size.height)\r\n  }, [ref, size])\r\n\r\n  useFrame(() => {\r\n    if (!ref.current || !composer.current) return\r\n\r\n    ref.current && composer.current.render()\r\n  }, 1)\r\n\r\n  return (\r\n    <>\r\n      <scene ref={ref} background={new THREE.Color('#000007')}>\r\n        {children}\r\n      </scene>\r\n      <effectComposer ref={composer} args={[gl]}>\r\n        <renderPass attachArray=\"passes\" scene={ref.current} camera={camera} />\r\n        <unrealBloomPass attachArray=\"passes\" args={[aspect, 1, 0.5, 0]} />\r\n      </effectComposer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bloom\r\n","import { useRef, useEffect } from 'react'\r\n\r\nfunction useDocumentTitle(title: string, prevailOnUnmount = false) {\r\n  const defaultTitle = useRef(document.title)\r\n\r\n  useEffect(() => {\r\n    document.title = title\r\n  }, [title])\r\n\r\n  useEffect(\r\n    () => () => {\r\n      if (!prevailOnUnmount) {\r\n        document.title = defaultTitle.current\r\n      }\r\n    },\r\n    [prevailOnUnmount]\r\n  )\r\n}\r\n\r\nexport default useDocumentTitle\r\n","import React, { memo } from 'react'\r\nimport { useLoader, useFrame } from '@react-three/fiber'\r\nimport * as THREE from 'three'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\n\r\nconst SCALE = 0.7\r\n\r\nconst Tesla: React.FC<any> = ({ rimsColor, bodyColor, chromeColor }) => {\r\n  const ref = React.useRef<THREE.Group>()\r\n  const obj: any = useLoader(GLTFLoader, require('assets/tesla/tesla.glb'))\r\n\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return\r\n    }\r\n\r\n    ref.current.traverse((c: any) => {\r\n      if (c.type === 'Mesh') {\r\n        if (c.userData.name.indexOf('wheel') !== -1) {\r\n          c.material.color.set(rimsColor)\r\n        } else if (c.userData.name.indexOf('bod') !== -1) {\r\n          c.material.color.set(bodyColor)\r\n        } else if (c.userData.name.indexOf('chr') !== -1) {\r\n          c.material.color.set(chromeColor)\r\n        } else if (c.userData.name.indexOf('emit') !== -1) {\r\n          c.material.emissive.set('#0693E3')\r\n          c.material.color.set('#7BDCB5')\r\n          c.material.eissiveIntensity = 10\r\n        }\r\n      }\r\n    })\r\n  }, [rimsColor, bodyColor, chromeColor])\r\n\r\n  useFrame(({ clock, mouse }, delta) => {\r\n    if (!ref.current) return\r\n\r\n    const t = clock.getElapsedTime()\r\n    ref.current.rotation.y = -0.5 + Math.PI / 0.5 + Math.cos(t / 2) / 8\r\n\r\n    // Pulsation animation for lights\r\n    ref.current.traverse((c: any) => {\r\n      if (c.type === 'Mesh') {\r\n        if (c.userData.name.indexOf('emit') !== -1) {\r\n          c.material.emissiveIntensity = Math.abs(\r\n            Math.sin(clock.elapsedTime * 0.5)\r\n          )\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <group\r\n      ref={ref}\r\n      position={[0.75, -1, 0]}\r\n      rotation={[0, -0.5, 0]}\r\n      scale={[SCALE, SCALE, SCALE]}\r\n    >\r\n      <primitive object={obj.scene} castShadow />\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default memo(Tesla)\r\n","import React from 'react'\r\n\r\nimport { TwitterPicker } from 'react-color'\r\n\r\nconst TeslaConfigurator: React.FC<any> = ({\r\n  rimsColor,\r\n  bodyColor,\r\n  chromeColor,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"config-container\">\r\n      <div>\r\n        <label>Change Rim Color</label>\r\n        <TwitterPicker\r\n          triangle=\"hide\"\r\n          colors={[\r\n            '#253C78',\r\n            '#FF6900',\r\n            '#0693E3',\r\n            '#EB144C',\r\n            '#9900EF',\r\n            '#2DDF8C',\r\n            '#000',\r\n            '#f5f5f5',\r\n          ]}\r\n          color={rimsColor}\r\n          onChangeComplete={(color: any) => onChange('rims', color.hex)}\r\n        />\r\n      </div>\r\n      <div>\r\n        Change Body Color: {}\r\n        <TwitterPicker\r\n          triangle=\"hide\"\r\n          colors={[\r\n            '#280003',\r\n            '#FF6900',\r\n            '#FCB900',\r\n            '#00D084',\r\n            '#0693E3',\r\n            '#f5f5f5',\r\n            '#EB144C',\r\n            '#9900EF',\r\n            '#A2D729',\r\n            '#EF8275',\r\n          ]}\r\n          color={bodyColor}\r\n          onChangeComplete={(color: any) => onChange('body', color.hex)}\r\n        />\r\n      </div>\r\n      <div>\r\n        Change Chrome Color\r\n        <TwitterPicker\r\n          triangle=\"hide\"\r\n          colors={['#000', '#f5f5f5']}\r\n          color={chromeColor}\r\n          onChangeComplete={(color: any) => onChange('chrome', color.hex)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeslaConfigurator\r\n","import React, { useState } from 'react'\r\nimport Canvas from 'components/Canvas'\r\nimport {\r\n  PresentationControls,\r\n  Stats,\r\n  Loader,\r\n  SpotLight,\r\n} from '@react-three/drei'\r\n\r\nimport Bloom from 'components/Effects/Bloom'\r\n\r\nimport Tesla from 'components/Tesla'\r\nimport Configurator from './Configurator'\r\n\r\nimport useDocumentTitle from 'hooks/useDocumentTitle'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst TeslaPresentation: React.FC = () => {\r\n  useDocumentTitle('Tesla presentation')\r\n\r\n  const [rimsColor, setRimsColor] = useState<string>('#253C78')\r\n  const [bodyColor, setBodyColor] = useState<string>('#280003')\r\n  const [chromeColor, setChromeColor] = useState<string>('#fff')\r\n\r\n  const update = (type: string, value: string) => {\r\n    switch (type) {\r\n      case 'rims':\r\n        setRimsColor(value)\r\n        break\r\n      case 'body':\r\n        setBodyColor(value)\r\n        break\r\n      case 'chrome':\r\n        setChromeColor(value)\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"presentation__page\">\r\n      <div className=\"presentation__item presentation__tesla\">\r\n        <div className=\"presentation__item-wrapper\">\r\n          <Canvas>\r\n            <Bloom>\r\n              <PresentationControls\r\n                global\r\n                config={{ mass: 10, tension: 50 }}\r\n                snap\r\n                rotation={[0, -0.25, 0]}\r\n                // Vertical\r\n                polar={[0, Math.PI / 50]}\r\n                // Horizontal\r\n                azimuth={[-Math.PI, Math.PI]}\r\n              >\r\n                <Tesla\r\n                  rimsColor={rimsColor}\r\n                  bodyColor={bodyColor}\r\n                  chromeColor={chromeColor}\r\n                />\r\n              </PresentationControls>\r\n\r\n              <SpotLight\r\n                penumbra={1}\r\n                position={[3, -4, 3]}\r\n                intensity={25}\r\n                angle={1}\r\n                color=\"#5158BB\"\r\n                castShadow={false}\r\n                radiusTop={5}\r\n                decay={1}\r\n              />\r\n              <SpotLight\r\n                penumbra={0.5}\r\n                position={[-2, 0, 4]}\r\n                intensity={10}\r\n                distance={1}\r\n                angle={1}\r\n                color=\"orange\"\r\n                opacity={0.005}\r\n              />\r\n              <SpotLight\r\n                penumbra={0.75}\r\n                position={[-3, 3, 3]}\r\n                intensity={0.25}\r\n                angle={0.5}\r\n                color=\"#af1b3f\"\r\n                opacity={0.15}\r\n              />\r\n              <ambientLight intensity={0.75} />\r\n            </Bloom>\r\n            <Stats />\r\n          </Canvas>\r\n          <Loader />\r\n\r\n          <div className=\"presentation__details presentation__details--top\">\r\n            <h1>Tesla</h1>\r\n          </div>\r\n        </div>\r\n        <Configurator\r\n          rimsColor={rimsColor}\r\n          bodyColor={bodyColor}\r\n          chromeColor={chromeColor}\r\n          onChange={update}\r\n        />\r\n      </div>\r\n      <div className=\"credits\">\r\n        <div className=\"footer-navigation footer-navigation--previous\">\r\n          <Link to=\"/drone\">Go to Drone Demo</Link>\r\n        </div>\r\n        <div className=\"footer-navigation footer-navigation--next\">\r\n          <Link to=\"/sword\">Go to Sword Demo</Link>\r\n        </div>\r\n        <p>\r\n          This work is based on\r\n          <a\r\n            href=\"https://sketchfab.com/3d-models/tesla-model-s-1360e3cf7323487eaba8ce94279229b6\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Tesla Model S\r\n          </a>\r\n          by\r\n          <a\r\n            href=\"https://sketchfab.com/OneSteven\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            iSteven / Sketchfab\r\n          </a>\r\n          licensed under\r\n          <a\r\n            href=\"https://creativecommons.org/licenses/by-nc/4.0/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            CC Attribution\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeslaPresentation\r\n"],"names":["children","camera","position","fov","dpr","shadows","onCreated","gl","toneMapping","THREE","Math","PI","opacity","width","height","blur","far","extend","EffectComposer","RenderPass","UnrealBloomPass","useThree","size","ref","useRef","composer","aspect","useMemo","useEffect","current","setSize","useFrame","render","background","args","attachArray","scene","title","prevailOnUnmount","defaultTitle","document","Tesla","rimsColor","bodyColor","chromeColor","React","obj","useLoader","GLTFLoader","require","traverse","c","type","userData","name","indexOf","material","color","set","emissive","eissiveIntensity","delta","clock","mouse","t","getElapsedTime","rotation","y","cos","emissiveIntensity","abs","sin","elapsedTime","scale","object","castShadow","memo","onChange","className","triangle","colors","onChangeComplete","hex","useDocumentTitle","useState","setRimsColor","setBodyColor","setChromeColor","Canvas","Bloom","PresentationControls","global","config","mass","tension","snap","polar","azimuth","SpotLight","penumbra","intensity","angle","radiusTop","decay","distance","Stats","Loader","Configurator","value","to","href","target","rel"],"sourceRoot":""}